name: CI Pipeline

on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
      - ready_for_review
  push:
    branches:
      - master
    tags:
      - '*'

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Read .nvmrc
        run: echo "NVMRC=$(cat .nvmrc)" >> $GITHUB_OUTPUT
        id: nvm
      - name: Use Node.js (.nvmrc)
        uses: actions/setup-node@v3
        with:
          node-version: "${{ steps.nvm.outputs.NVMRC }}"
          cache: yarn
      - name: yarn install
        run: yarn
      - name: Lint
        run: yarn lint
      - name: install browsers
        run: yarn playwright install
      - name: Bring up EPP
        run: docker compose up --wait
      - name: run tests
        run: yarn test --retries 0 --max-failures 1
      - name: Playwright report upload
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: playwright-report
          path: playwright-report/index.html
      - name: Temporal workflow status
        if: failure()
        run: |
          echo "Running Workflows"
          docmapWorkflows=$(tctl -ns epp--staging wf list --ps 1000 --open -wt importDocmap --pjson | jq '.[].execution.workflowId' -r)
          for workflowId in $docmapWorkflows; do
            tctl -ns epp--staging wf describe -praw -wid $workflowId | jq -r '"'$workflowId'\t\t\t"+(.|select(.pendingActivities != null)|.pendingActivities[]|.activityType.name+"\t"+.lastFailure.message)'

            childWorkflows=$(tctl -ns epp--staging wf describe -praw -wid $workflowId | jq -r '.|select(.pendingChildren != null)|.pendingChildren[].workflowId')

            for childWorkflowId in $childWorkflows; do
              echo -n "$workflowId"
              tctl -ns epp--staging wf describe -praw -wid $childWorkflowId | jq -r '"\t"+.workflowExecutionInfo.execution.workflowId+"\t"+.workflowExecutionInfo.type.name+"\t"+(.pendingActivities[]|.activityType.name+"\t"+.lastFailure.message)'
            done;
          done;

          echo "Successful workflows"
          docmapWorkflows=$(tctl -ns epp--staging wf list --ps 1000 -wt importDocmap --pjson | jq '.[].execution.workflowId' -r)
          for workflowId in $docmapWorkflows; do
            echo $workflowId;
          done;
