name: CI Pipeline

on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
      - ready_for_review
  push:
    branches:
      - master
    tags:
      - '*'

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Read .nvmrc
        run: echo "NVMRC=$(cat .nvmrc)" >> $GITHUB_OUTPUT
        id: nvm
      - name: Use Node.js (.nvmrc)
        uses: actions/setup-node@v3
        with:
          node-version: "${{ steps.nvm.outputs.NVMRC }}"
          cache: yarn
      - name: yarn install
        run: yarn
      - name: Lint
        run: yarn lint
      - name: install browsers
        run: yarn playwright install
      # - name: Bring up EPP
      #   run: docker compose up --wait
      # - name: run tests
      #   run: yarn test

      - name: Failure Slack Notification
        uses: slackapi/slack-github-action@v1.24.0
        if: failure()
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_E2E_NOTIFICATION_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
        with:
          payload: |
            {
              "text": "EPP GitHub Action e2e test failure :fire:",
              "blocks": [
              {
                  "type": "header",
                  "text": {
                    "type": "plain_text",
                    "text": "EPP e2e test failure :fire:",
                    "emoji": true
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "<${{ github.event.pull_request.html_url || github.event.head_commit.url }}|View Pull Request>"
                  }
                }
              ]
            }
  approve-images:
    runs-on: ubuntu-latest
    needs: [test]
    # if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v3
      - name: Login to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Get images from docker-compose
        run: |
          echo "SERVER_IMAGE_TAG=$(yq '.services.api.image | capture("(?P<repo>.*):(?P<tag>.*)").tag' docker-compose.yaml)" >> $GITHUB_ENV
          echo "CLIENT_IMAGE_TAG=$(yq '.services.client.image | capture("(?P<repo>.*):(?P<tag>.*)").tag' docker-compose.yaml)" >> $GITHUB_ENV
          echo "IMPORT_IMAGE_TAG=$(yq '.services.worker.image | capture("(?P<repo>.*):(?P<tag>.*)").tag' docker-compose.yaml)" >> $GITHUB_ENV
      - name: create new manifest for accepted tags
        run: |
          docker buildx imagetools create -t ghcr.io/elifesciences/enhanced-preprints-client:$CLIENT_IMAGE_TAG-approved ghcr.io/elifesciences/enhanced-preprints-client:$CLIENT_IMAGE_TAG

          # echo client manifests line $(docker manifest inspect ghcr.io/elifesciences/enhanced-preprints-client:$CLIENT_IMAGE_TAG | jq -r '.manifests|map("ghcr.io/elifesciences/enhanced-preprints-client@"+.digest)|join(" ")')
          # docker manifest create ghcr.io/elifesciences/enhanced-preprints-client:$CLIENT_IMAGE_TAG-approved $(docker manifest inspect ghcr.io/elifesciences/enhanced-preprints-client:$CLIENT_IMAGE_TAG | jq -r '.manifests|map("ghcr.io/elifesciences/enhanced-preprints-client@"+.digest)|join(" ")')
          # docker manifest push ghcr.io/elifesciences/enhanced-preprints-client:$CLIENT_IMAGE_TAG-approved

          # docker manifest create ghcr.io/elifesciences/enhanced-preprints-client:$SERVER_IMAGE_TAG-approved $(docker manifest inspect ghcr.io/elifesciences/enhanced-preprints-client:$SERVER_IMAGE_TAG | jq -r '.manifests|map("ghcr.io/elifesciences/enhanced-preprints-client@"+.digest)|join(" ")')
          # docker manifest push ghcr.io/elifesciences/enhanced-preprints-server:$SERVER_IMAGE_TAG-approved

          # docker manifest create ghcr.io/elifesciences/enhanced-preprints-client:$IMPORT_IMAGE_TAG-approved $(docker manifest inspect ghcr.io/elifesciences/enhanced-preprints-client:$IMPORT_IMAGE_TAG | jq -r '.manifests|map("ghcr.io/elifesciences/enhanced-preprints-client@"+.digest)|join(" ")')
          # docker manifest push ghcr.io/elifesciences/enhanced-preprints-import-worker:$IMPORT_IMAGE_TAG-approved
      - name: Success Slack Notification
        uses: slackapi/slack-github-action@v1.24.0
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_E2E_NOTIFICATION_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
        with:
          payload: |
            {
              "text": "EPP GitHub Action e2e test success and new images approved :tada:",
              "blocks": [
                {
                  "type": "header",
                  "text": {
                    "type": "plain_text",
                    "text": "EPP GitHub Action e2e test success and new images approved :tada:",
                    "emoji": true
                  }
                },
                {
                  "type": "section",
                  "fields": [
                    {
                      "type": "mrkdwn",
                      "text": "*Client image:*\n ${{ env.CLIENT_IMAGE_TAG }}"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Server image:*\n ${{ env.SERVER_IMAGE_TAG }}"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*import image:*\n ${{ env.IMPORT_IMAGE_TAG }}"
                    }
                  ]
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "<${{ github.event.pull_request.html_url || github.event.head_commit.url }}|View Commit>"
                  }
                }
              ]
            }
      - name: Failure Slack Notification
        uses: slackapi/slack-github-action@v1.24.0
        if: failure()
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_E2E_NOTIFICATION_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
        with:
          payload: |
            {
              "text": "EPP GitHub Action e2e test success, but new images failed to approved :fire:",
              "blocks": [
              {
                  "type": "header",
                  "text": {
                    "type": "plain_text",
                    "text": "EPP GitHub Action e2e test success, but new images failed to approved :fire:",
                    "emoji": true
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "<${{ github.event.pull_request.html_url || github.event.head_commit.url }}|View Commit>"
                  }
                }
              ]
            }
