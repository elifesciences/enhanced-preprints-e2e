name: CI Pipeline

on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
      - ready_for_review
  push:
    branches:
      - master
    tags:
      - '*'

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Read .nvmrc
        run: echo "NVMRC=$(cat .nvmrc)" >> $GITHUB_OUTPUT
        id: nvm
      - name: Use Node.js (.nvmrc)
        uses: actions/setup-node@v3
        with:
          node-version: "${{ steps.nvm.outputs.NVMRC }}"
          cache: yarn
      - name: yarn install
        run: yarn
      - name: Lint
        run: yarn lint
      - name: install browsers
        run: yarn playwright install
      # - name: Bring up EPP
      #   run: docker compose up --wait
      # - name: run tests
      #   run: yarn test

      - name: Get images from docker-compose
        run: |
          echo "SERVER_IMAGE_TAG=$(yq '.services.api.image | capture("(?P<repo>.*):(?P<tag>.*)").tag' docker-compose.yaml)" >> $GITHUB_ENV
          echo "CLIENT_IMAGE_TAG=$(yq '.services.client.image | capture("(?P<repo>.*):(?P<tag>.*)").tag' docker-compose.yaml)" >> $GITHUB_ENV
          echo "IMPORT_IMAGE_TAG=$(yq '.services.worker.image | capture("(?P<repo>.*):(?P<tag>.*)").tag' docker-compose.yaml)" >> $GITHUB_ENV
      # - name: Search latest semver Image
      #   uses: tinact/docker.image-retag@master
      #   with:
      #     image_name: test
      #     image_old_tag: do_not_use
      #     image_new_tag: retag
      #     registry: docker.pkg.github.com/tinact/docker.image
      #     registry_username: sbaerlocher
      #     registry_password: ${{ secrets.GITHUB_TOKEN }}
      - name: Failure Slack Notification
        uses: slackapi/slack-github-action@v1.24.0
        if: failure()
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_E2E_NOTIFICATION_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
        with:
          payload: |
            {
              "text": "EPP GitHub Action e2e test result: ${{ job.status }} :fire:",
              "blocks": [
              {
                  "type": "header",
                  "text": {
                    "type": "plain_text",
                    "text": "EPP e2e test success :tada:",
                    "emoji": true
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "<${{ github.event.pull_request.html_url || github.event.head_commit.url }}|View Pull Request>"
                  }
                }
              ]
            }
      - name: Success Slack Notification
        uses: slackapi/slack-github-action@v1.24.0
        if: success()
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_E2E_NOTIFICATION_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
        with:
          payload: |
            {
              "text": "EPP GitHub Action e2e test result: ${{ job.status }} :tada:",
              "blocks": [
                {
                  "type": "header",
                  "text": {
                    "type": "plain_text",
                    "text": "EPP e2e test success :tada:",
                    "emoji": true
                  }
                },
                {
                  "type": "section",
                  "fields": [
                    {
                      "type": "mrkdwn",
                      "text": "*Client image:*\n ${{ env.CLIENT_IMAGE_TAG }}"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Server image:*\n ${{ env.SERVER_IMAGE_TAG }}"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*import image:*\n ${{ env.IMPORT_IMAGE_TAG }}"
                    }
                  ]
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "<${{ github.event.pull_request.html_url || github.event.head_commit.url }}|View Pull Request>"
                  }
                }
              ]
            }
