services:
  minio:
    image: minio/minio:RELEASE.2023-01-02T09-40-09Z
    ports:
      - 9100:9000
      - 9101:9001
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: miniotest
    command: server --console-address ":9001" /data
    healthcheck:
      test: curl http://minio:9000/minio/health/live
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 2s

  createbucket:
    image: minio/mc:RELEASE.2022-12-24T15-21-38Z
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc config host add myminio http://minio:9000 minio miniotest;
      /usr/bin/mc mb myminio/epp;
      /usr/bin/mc mb myminio/meca;
      exit 0;
      "

  loadbucket:
    image: minio/mc:RELEASE.2022-12-24T15-21-38Z
    depends_on:
      createbucket:
        condition: service_completed_successfully
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc config host add myminio http://minio:9000 minio miniotest;
      /usr/bin/mc cp --recursive /mock-meca/* myminio/meca/;
      exit 0;
      "
    volumes:
      - ./mock-data/meca:/mock-meca

  temporal:
    image: ghcr.io/elifesciences/temporal-cli:master-c12351f4-20230517.1457
    command:
      - "/temporal"
      - "server"
      - "start-dev"
      - "--namespace"
      - "default"
      - "--ip"
      - "0.0.0.0"
    ports:
      - 7233:7233
      - 8233:8233
    healthcheck:
      test: /temporal operator namespace list
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 2s

  mongodb:
    image: mongo:7.0.2
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: testtest
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh mongodb:27017/test -u admin -p testtest --authenticationDatabase admin --quiet
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 2s

  api:
    image: ghcr.io/elifesciences/enhanced-preprints-server:master-d1029b4b-20231011.0611
    healthcheck:
      test: sh -c 'apk add curl; curl http://api:3000/'
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 2s
    depends_on:
      mongodb:
        condition: service_healthy
    environment:
      REPO_TYPE: MongoDB
      REPO_CONNECTION: mongodb:27017
      REPO_USERNAME: admin
      REPO_PASSWORD: testtest
    ports:
      - 3000:3000

  client:
    image: ghcr.io/elifesciences/enhanced-preprints-client:master-2b7397ab-20231013.1141
    healthcheck:
      test: sh -c 'apk add curl; curl -X POST http://client:3000/'
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 30s
    environment:
      API_SERVER: http://api:3000
      NEXT_PUBLIC_IMAGE_SERVER: /iiif
      IS_AUTOMATED: true
    depends_on:
      api:
        condition: service_healthy
    ports:
      - 3001:3000

  xslt:
    image: ghcr.io/elifesciences/enhanced-preprints-biorxiv-xslt-api:master-7d1d4fbf-20231013.1444
    restart: always
    ports:
      - 3004:80

  worker:
    image: ghcr.io/elifesciences/enhanced-preprints-import-worker:master-ae4e91ee-20231013.1133
    depends_on:
      createbucket:
        condition: service_completed_successfully
      loadbucket:
        condition: service_completed_successfully
      temporal:
        condition: service_healthy
      xslt:
        condition: service_healthy
      api:
        condition: service_healthy
    environment:
      EPP_SERVER_URI: http://api:3000
      TEMPORAL_SERVER: temporal:7233

      # EPP S3 bucket
      S3_ENDPOINT: http://minio:9000
      AWS_ACCESS_KEY_ID: minio
      AWS_SECRET_ACCESS_KEY: miniotest
      BUCKET_NAME: epp

      # Meca S3 Bucket (on minio)
      MECA_S3_ENDPOINT: http://minio:9000
      MECA_AWS_ACCESS_KEY_ID: minio
      MECA_AWS_SECRET_ACCESS_KEY: miniotest
      XSLT_TRANSFORM_ADDRESS: http://xslt:80
    restart: on-failure:5
    command:
      - yarn
      - start:worker
    healthcheck:
      test: curl -s http://worker:9464/metrics  | grep 'temporal_worker_start{namespace="default",service_name="temporal-core-sdk",task_queue="epp"}'  | grep 1
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 2s

  wiremock:
    image: wiremock/wiremock:3.1.0-1
    ports:
      - 8080:8080
    healthcheck:
      test: curl http://wiremock:8080/__admin/health
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 30s
    command:
      --local-response-templating
    volumes:
      - ./wiremock/mappings:/home/wiremock/mappings
      - ./mock-data/docmaps:/home/wiremock/__files/docmaps
